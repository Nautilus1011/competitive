/*
環状型の処理の時に有効なプログラムの例


xが負数の時に一度整数にしてからその数値を取り出してあげることで安定する

0からカウントして9で繰り上がるときの例
(x + 10) % 10;

時計の時間の例
(x + 12) % 12;

曜日の例
(x + 7) % 7;
*/




/*
問題文

セキュリティ意識の高い高橋君はこの度、自分の家に新しい錠をつけることにしました。

この錠はダイヤルロック式で、
1 桁の数字が表示されるディスプレイと、赤色と青色の 2 種類のボタンがついています。
赤いボタンを押すとディスプレイに表示されている数が 1 増え、青いボタンを押すと 1 減ります。

ただし、ディスプレイの表示が 9 のときに赤いボタンを押すと 0 になり、
ディスプレイの表示が 0 のときに青いボタンを押すと 9 になります。

いま、ディスプレイに表示されている数字は a で、この数字が b になった瞬間に錠が開きます。
さて、錠を開けるためには最低何回はボタンを押す必要があるでしょうか？
*/



#include <bits/stdc++.h>
using namespace std;

int main() {
  int a, b; cin >> a >> b;
  
  /*環状処理の時に便利*/
  int red = (b - a + 10) % 10;
  int blue = (a - b + 10) % 10;
  
  cout << min(red, blue) << endl;
  
}